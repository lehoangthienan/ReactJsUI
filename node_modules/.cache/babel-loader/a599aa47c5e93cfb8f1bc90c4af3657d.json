{"ast":null,"code":"import _classCallCheck from \"/home/anle/ReactJs/product-detail/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anle/ReactJs/product-detail/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anle/ReactJs/product-detail/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anle/ReactJs/product-detail/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anle/ReactJs/product-detail/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anle/ReactJs/product-detail/src/components/LogProduct.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: '#2196f2',\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '85%',\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.white\n      }\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(date, content) {\n  id += 1;\n  return {\n    id: id,\n    date: date,\n    content: content\n  };\n}\n\nvar rows = [createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards. Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'), createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'), createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'), createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'), createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'), createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'), createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'), createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'), createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'), createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'), createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'), createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.')];\n\nvar LogProduct =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LogProduct, _React$Component);\n\n  function LogProduct() {\n    _classCallCheck(this, LogProduct);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LogProduct).apply(this, arguments));\n  }\n\n  _createClass(LogProduct, [{\n    key: \"render\",\n    value: function render() {\n      var _props = props,\n          classes = _props.classes;\n      return React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(CustomTableCell, {\n        numeric: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"No.\"), React.createElement(CustomTableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Update date\"), React.createElement(CustomTableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Work Content\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.props.logs.map(function (row, index) {\n        return React.createElement(TableRow, {\n          className: classes.row,\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(CustomTableCell, {\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, index), React.createElement(CustomTableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, row.date), React.createElement(CustomTableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, row.content));\n      }))));\n    }\n  }]);\n\n  return LogProduct;\n}(React.Component);\n\nLogProduct.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(LogProduct);","map":{"version":3,"sources":["/home/anle/ReactJs/product-detail/src/components/LogProduct.js"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","CustomTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","styles","root","width","marginLeft","marginRight","marginTop","spacing","unit","overflowX","table","minWidth","row","background","id","createData","date","content","rows","LogProduct","props","classes","logs","map","index","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: '#2196f2',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '85%',\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.white,\n    },\n  },\n});\n\nlet id = 0;\nfunction createData(date, content) {\n  id += 1;\n  return { id, date, content };\n}\n\nconst rows = [\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards. Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n  createData('12:35:23 11/12/2018', 'Planting products and land according to WHO standards.Planting products and land according to WHO standards.'),\n  createData('17:35:23 19/12/2018', 'Watering the trees as prescribed.Watering the trees as prescribed.'),\n];\n\nclass LogProduct extends React.Component {\n\nrender() {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell numeric>No.</CustomTableCell>\n            <CustomTableCell>Update date</CustomTableCell>\n            <CustomTableCell>Work Content</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.props.logs.map((row , index) => {\n            return (\n              <TableRow className={classes.row} key={row.id}>\n                <CustomTableCell numeric>\n                  {index}\n                </CustomTableCell>\n                <CustomTableCell component=\"th\" scope=\"row\">{row.date}</CustomTableCell>\n                <CustomTableCell component=\"th\" scope=\"row\">{row.content}</CustomTableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n}\n\nLogProduct.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LogProduct);"]},"metadata":{},"sourceType":"module"}